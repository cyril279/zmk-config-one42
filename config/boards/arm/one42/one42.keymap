/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NAVIG   3
#define FUNCT   4
#define ADJST   5

&sensors {
     status = "okay";
     sensors = <&left_encoder &right_encoder>;
};

&left_encoder { status = "okay"; };
&right_encoder { status = "disabled"; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&kp TAB>;
        };

        combo_bspc {
            timeout-ms = <30>;
            key-positions = <8 9>;
            bindings = <&kp BSPC>;
        };

        combo_esc {
            timeout-ms = <30>;
            key-positions = <14 15>;
            bindings = <&kp ESC>;
        };
        combo_rctrl {
            timeout-ms = <30>;
            key-positions = <20 21>;
            bindings = <&kp RCTRL>;
        };

        combo_rdel {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp DEL>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB   &kp Q       &kp W      &kp E       &kp R       &kp T       &kp Y   &kp U       &kp I           &kp O        &kp P    &kp BSPC
                &kp ESC   &kp A       &kp S      &kp D       &kp F       &kp G       &kp H   &kp J       &kp K           &kp L        &kp SEMI &kp SQT
                &kp LGUI  &hm LCTRL Z &hm LALT X &hm LSHFT C &hm LCTRL V &kp B       &kp N   &hm RCTRL M &hm RSHFT COMMA &hm LALT DOT &kp FSLH &kp RET
                                                       &kp C_PP &kp LSHFT &mo LOWER &mo RAISE &lt NAVIG SPACE &mo FUNCT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            bindings = <
                &kp DEL  &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS  &kp ASTRK   &kp LPAR  &kp RPAR  &kp DEL
                &trans   &trans   &kp LGUI &trans   &trans   &trans         &kp TILDE &kp UNDER &kp KP_PLUS &kp LBRC  &kp RBRC  &kp PIPE
                &trans   &trans   &trans   &trans   &trans   &kp CLCK       &kp PSCRN &trans    &trans      &trans    &trans    &trans
                                              &kp C_MUTE &trans   &trans &mo ADJST &trans    &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            bindings = <
                &kp DEL  &kp N1   &kp N2   &kp N3   &kp N4   &kp N5         &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp DEL
                &trans   &trans   &kp LGUI &trans   &trans   &trans         &kp GRAVE &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH
                &trans   &trans   &trans   &trans   &trans   &kp CLCK       &kp PSCRN &trans    &trans    &trans    &trans    &trans
                                            &kp C_MUTE &trans &mo ADJST &trans    &trans    &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        navig_layer {
            bindings = <
                &kp DEL  &trans   &trans   &trans   &trans   &trans          &trans   &trans   &trans    &trans    &trans    &kp DEL
                &trans   &trans   &kp LGUI &trans   &trans   &trans          &trans   &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans
                &trans   &trans   &trans   &trans   &trans   &kp CLCK        &trans   &kp HOME &kp PG_DN &kp PG_UP &kp END   &trans
                                            &trans   &trans   &trans     &trans   &trans   &trans
            >;
        };

        funct_layer {
            bindings = <
                &kp DEL  &trans   &trans   &trans   &trans   &trans          &trans   &trans   &trans   &trans   &trans   &kp DEL
                &trans   &trans   &trans   &trans   &trans   &trans          &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6
                &trans   &trans   &trans   &trans   &trans   &kp SQT         &kp F7   &kp F8   &kp F9   &kp F10  &kp F11  &kp F12
                                            &trans   &trans   &trans     &trans   &trans   &trans
            >;
        };

        adjust_layer {
            bindings = <
                &none    &none    &none    &none    &none    &none           &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
                &none    &none    &none    &none    &none    &none           &none        &none        &none        &none        &none        &none
                &none    &none    &none    &none    &none    &bootloader     &reset       &none        &none        &none        &none        &none
                                             &trans   &trans   &trans     &trans   &trans   &trans
            >;
        };
    };
};